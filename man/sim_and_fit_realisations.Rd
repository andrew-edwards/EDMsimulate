% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_and_fit_realisations.R
\name{sim_and_fit_realisations}
\alias{sim_and_fit_realisations}
\title{Simulation of multiple realisations of Larkin population dynamics
model with estimation using EDM, and Larkin and Ricker models.}
\usage{
sim_and_fit_realisations(
  salmon_sim_args = list(),
  edm_fit = TRUE,
  larkin_fit = FALSE,
  ricker_fit = FALSE,
  pbsEDM_args = list(lags = list(R_prime_t = 0, S_t = 0:3), first_difference = TRUE,
    centre_and_scale = TRUE),
  larkin_args = list(run_stan = TRUE, prior_mean_alpha = 2, prior_mean_beta = -rep(1, 4),
    prior_mean_sigma = 0.5, prior_sd_alpha = 0.5, prior_sd_beta = rep(0.25, 4),
    prior_sd_sigma = 0.25),
  ricker_args = list(run_stan = TRUE, prior_mean_alpha = 2, prior_mean_beta = -1,
    prior_mean_sigma = 0.5, prior_sd_alpha = 0.5, prior_sd_beta = 0.25, prior_sd_sigma =
    0.25),
  M = 10
)
}
\arguments{
\item{salmon_sim_args}{List of arguments to pass onto `salmon_sim()`,
including `T` for the final time step. If any of `p_prime`, `T`,
`T_transient`, or `sigma_nu` are not specified then they are given the
default values from `salmon_sim()`. TODO make p_prime standalone}

\item{pbsEDM_args}{List of arguments to pass onto `pbsEDM::pbsEDM()`. Note
that `lags` has no default, so needs to be specified here, and that `R_prime_t`
has to be the first one (with a lag of zero, so `R_prime_t = 0` or `R_prime_t = 0:1`
etc.) to be the response variable. Note that the default list here is just
to run examples, and if the list is different then `first_difference` and
`centre_and_scale` need to be explicictly specified in the new list (since
their defaults in `pbsEDM()` are FALSE, not TRUE like here.}

\item{larkin_args}{List of arguments to pass onto `larkin::forecast()`.}

\item{ricker_args}{List of arguments to pass onto `larkin::forecast()`.}

\item{M}{number of realisations}

\item{T}{Explicit `T` because we need a default; this gets overwritten by
any `T` in `salmon_sim_args`.}
}
\value{
Tibble with row `m` corresponding to realisation `m`, for which
the seed for the simulated data set is given by `set.seed(m)`. Columns are
\describe{
  \item{m:}{realisation, from 1 to `M`}
  \item{R_prime_T_sim:}{the simulated `R_prime_T` value (i.e. simulated
  recruitment from year-T spawners) for the final time
  step), which was not used for any of the fitting methods}
  \item{R_prime_T_edm_fit`:}{forecasted value of the final recruitment calculated using EDM}
  \item{`E`, `N_rho`, `N_rmse`, `X_rho`, `X_rmse`:}{standard output from EDM}
  \item{R_prime_T_lar_fit`:}{forecasted value of the final recruitment calculated using fitting a Larkin
  model}
  \item{`lar_5`, `lar_95`, `lar_sd`, `lar_rhat`:}{5th and 95th percentiles
  and standard deviation of `R_prime_t_lar_fit`, and max rhat TODO what is
  that, from fitting the Larkin model}
  \item{`R_prime_T_ric_fit`, `ric_5`, `ric_95`, `ric_sd`, `ric_rhat`:}{ equivalent
  results from fitting a Ricker model.}
}
}
\description{
Simulate a population and fit it using `pbsEDM::pbsEDM()` for
  EDM, and `larkin::forecast()` for Larkin and Ricker model. Can switch off
  running of any of the methods. Doing multiple realisations for a given set
  of parameters (so the only difference is the stochasticity)

For each realisation `m`, this calculates returns the simulated recruitment `R_prime_T_sim` for the final time step, the
forecasted `R_prime_T_edm_fit` calculated using EDM (obviously taking `R_prime_T_sim`
out of the input to `pbsEDM::pbsEDM()`, and the EDM summary results;
  followed by outputs from fitting the Larkin and Ricker models.

For EDM
use `sim_and_fit()` with a particular seed to get full results for any
specific realisation.
}
\examples{
\dontrun{
TODO res <- sim_and_fit(pbsEDM_args = list(lags = list(R_prime_t = 0,
                                                  S_t = 0:3),
                                      first_difference = TRUE))
res$fit$results$X_rho
# Think of year 80 as being 2019ish, not 2023. Unless we change it to
  returns ;)
sim_and_fit_realisations(M=1)
res <- sim_and_fit_realisations(M=2, larkin_fit = TRUE, ricker_fit = TRUE)
}
}
\author{
Andrew Edwards
}
